{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\weather-forecast\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport SearchBar from './components/search/SearchBar';\nimport Weather from './components/main/Weather';\nimport { BsFillArrowLeftCircleFill as Left } from \"react-icons/bs\";\nimport { BsFillArrowRightCircleFill as Right } from \"react-icons/bs\";\nimport useGeoLocation from './hooks/useGeolocation';\nimport { getByLocation } from './api/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  background: #304352;  \n  background: -webkit-linear-gradient(to right, #d7d2cc, #304352);  \n  background: linear-gradient(to right, #d7d2cc, #304352);\n  width: 800px;\n  height: 475px; \n  display: flex;\n  margin: auto;\n  border-radius: 30px;\n\n  #search-bar{\n    margin-left: 255px;\n  }\n  \n`;\n_c = Container;\nconst Wrapper = styled.div`\n  display:flex ;\n  flex-direction:row ;\n  \n  #center{\n    margin-left: 18px;\n    margin-top: 75px;\n    width: 725px;\n    height: 330px;\n    background: rgba( 203, 200, 200, 0.15 );\n    box-shadow: 0 8px 32px 0 rgba( 31, 38, 135, 0.37 );\n    backdrop-filter: blur( 0px );\n    -webkit-backdrop-filter: blur( 0px );\n    border-radius: 10px;\n    border: 1px solid rgba( 255, 255, 255, 0.18 );\n  }\n\n  #left{\n    margin-top: 220px;\n  }\n  #right{\n    margin-top: 220px;\n    margin-left: 20px;\n  }\n`;\n_c2 = Wrapper;\n\nconst App = () => {\n  _s();\n\n  const location = useGeoLocation();\n  const [data, setData] = useState({\n    city: \"\",\n    weather: \"\",\n    temperature: \"\",\n    humidity: \"\",\n    date: \"\"\n  });\n  const [loaded, setLoaded] = useState(false);\n\n  const fetchData = async () => {\n    try {\n      const {\n        data\n      } = await getByLocation(location.coordinates.lat, location.coordinates.lng);\n      setData({\n        city: data.name,\n        weather: data.weather[0].main,\n        temperature: Math.round(data.main.temp),\n        humidity: data.main.humidity,\n        date: Date(data.dt)\n      });\n      setLoaded(true);\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, [location]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"search-bar\",\n        children: /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"left\",\n          children: /*#__PURE__*/_jsxDEV(Left, {\n            onClick: fetchData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Weather, {\n            city: data.city,\n            temperature: data.temperature,\n            weather: data.weather,\n            humidity: data.humidity,\n            dt: data.date,\n            loaded: loaded\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"right\",\n          children: /*#__PURE__*/_jsxDEV(Right, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"HssDJZIOYhHsoalo8iBU4ZUUiXs=\", false, function () {\n  return [useGeoLocation];\n});\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["C:/Users/PC/Desktop/weather-forecast/src/App.jsx"],"names":["React","useEffect","useState","styled","SearchBar","Weather","BsFillArrowLeftCircleFill","Left","BsFillArrowRightCircleFill","Right","useGeoLocation","getByLocation","Container","div","Wrapper","App","location","data","setData","city","weather","temperature","humidity","date","loaded","setLoaded","fetchData","coordinates","lat","lng","name","main","Math","round","temp","Date","dt","error","console","log","message"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport styled from 'styled-components'\nimport SearchBar from './components/search/SearchBar'\nimport Weather from './components/main/Weather'\nimport { BsFillArrowLeftCircleFill as Left } from \"react-icons/bs\"\nimport { BsFillArrowRightCircleFill as Right } from \"react-icons/bs\"\nimport useGeoLocation from './hooks/useGeolocation'\nimport {getByLocation} from './api/index'\n\nconst Container = styled.div`\n  background: #304352;  \n  background: -webkit-linear-gradient(to right, #d7d2cc, #304352);  \n  background: linear-gradient(to right, #d7d2cc, #304352);\n  width: 800px;\n  height: 475px; \n  display: flex;\n  margin: auto;\n  border-radius: 30px;\n\n  #search-bar{\n    margin-left: 255px;\n  }\n  \n`\nconst Wrapper = styled.div`\n  display:flex ;\n  flex-direction:row ;\n  \n  #center{\n    margin-left: 18px;\n    margin-top: 75px;\n    width: 725px;\n    height: 330px;\n    background: rgba( 203, 200, 200, 0.15 );\n    box-shadow: 0 8px 32px 0 rgba( 31, 38, 135, 0.37 );\n    backdrop-filter: blur( 0px );\n    -webkit-backdrop-filter: blur( 0px );\n    border-radius: 10px;\n    border: 1px solid rgba( 255, 255, 255, 0.18 );\n  }\n\n  #left{\n    margin-top: 220px;\n  }\n  #right{\n    margin-top: 220px;\n    margin-left: 20px;\n  }\n`\n\n\nconst App = () => {\n  const location = useGeoLocation();\n  const [data, setData] = useState({city:\"\",weather:\"\",temperature:\"\",humidity:\"\",date:\"\"})\n  const [loaded, setLoaded] = useState(false)\n\n  const fetchData = async () =>{\n    try {\n      const {data} = await getByLocation(location.coordinates.lat,location.coordinates.lng)\n      setData({city:data.name,weather:data.weather[0].main,temperature:Math.round(data.main.temp),humidity:data.main.humidity,date:Date(data.dt)})\n      setLoaded(true)\n    } catch (error) {\n      console.log(error.message)\n    }\n\n  }\n\n  useEffect(() =>{  \n      fetchData()\n      \n  },[location])\n  \n  \n\n  return (   \n    <Container>     \n      <div>\n        <div id='search-bar'>\n          <SearchBar />             \n        </div>     \n        <Wrapper>\n          <div id='left'><Left onClick={fetchData} /></div>\n          <div id='center'>\n            <Weather \n            city={data.city}\n            temperature={data.temperature}  \n            weather={data.weather}\n            humidity={data.humidity}\n            dt={data.date}\n            loaded={loaded}\n            />\n          </div>\n          <div id='right'><Right /></div>\n        </Wrapper>\n      </div>\n    </Container>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}