{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\n\nconst useGeoLocation = () => {\n  _s();\n\n  const [location, setLocation] = useState({\n    loaded: false,\n    coordinates: {\n      lat: \"\",\n      lng: \"\"\n    }\n  });\n\n  const onSuccess = location => {\n    setLocation({\n      loaded: true,\n      coordinates: {\n        lat: location.coords.latitude,\n        lng: location.coords.longitude\n      }\n    });\n  };\n\n  const onError = error => {\n    // setLocation({\n    //     loaded: true,\n    //     error: {\n    //         code: error.code,\n    //         message: error.message,\n    //     },\n    // });\n    alert(\"Geolocation not found\");\n  };\n\n  useEffect(() => {\n    if (!(\"geolocation\" in navigator)) {\n      onError({\n        code: 0,\n        message: \"Geolocation not supported\"\n      });\n    }\n\n    navigator.geolocation.getCurrentPosition(onSuccess, onError);\n  }, []);\n  return location;\n};\n\n_s(useGeoLocation, \"0fi+ayxgmLoNWCDCnfkmBRmgNTs=\");\n\nexport default useGeoLocation;","map":{"version":3,"sources":["C:/Users/PC/Desktop/weather-forecast/src/hooks/useGeolocation.jsx"],"names":["React","useState","useEffect","useGeoLocation","location","setLocation","loaded","coordinates","lat","lng","onSuccess","coords","latitude","longitude","onError","error","alert","navigator","code","message","geolocation","getCurrentPosition"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC;AACrCK,IAAAA,MAAM,EAAE,KAD6B;AAErCC,IAAAA,WAAW,EAAE;AAAEC,MAAAA,GAAG,EAAE,EAAP;AAAWC,MAAAA,GAAG,EAAE;AAAhB;AAFwB,GAAD,CAAxC;;AAKA,QAAMC,SAAS,GAAIN,QAAD,IAAc;AAC5BC,IAAAA,WAAW,CAAC;AACRC,MAAAA,MAAM,EAAE,IADA;AAERC,MAAAA,WAAW,EAAE;AACTC,QAAAA,GAAG,EAAEJ,QAAQ,CAACO,MAAT,CAAgBC,QADZ;AAETH,QAAAA,GAAG,EAAEL,QAAQ,CAACO,MAAT,CAAgBE;AAFZ;AAFL,KAAD,CAAX;AAOH,GARD;;AAUA,QAAMC,OAAO,GAAIC,KAAD,IAAW;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,IAAAA,KAAK,CAAC,uBAAD,CAAL;AACH,GATD;;AAWAd,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,EAAE,iBAAiBe,SAAnB,CAAJ,EAAmC;AAC/BH,MAAAA,OAAO,CAAC;AACJI,QAAAA,IAAI,EAAE,CADF;AAEJC,QAAAA,OAAO,EAAE;AAFL,OAAD,CAAP;AAIH;;AAEDF,IAAAA,SAAS,CAACG,WAAV,CAAsBC,kBAAtB,CAAyCX,SAAzC,EAAoDI,OAApD;AACH,GATQ,EASN,EATM,CAAT;AAWA,SAAOV,QAAP;AACH,CAvCD;;GAAMD,c;;AAyCN,eAAeA,cAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst useGeoLocation = () => {\r\n    const [location, setLocation] = useState({\r\n        loaded: false,\r\n        coordinates: { lat: \"\", lng: \"\" },\r\n    });\r\n\r\n    const onSuccess = (location) => {\r\n        setLocation({\r\n            loaded: true,\r\n            coordinates: {\r\n                lat: location.coords.latitude,\r\n                lng: location.coords.longitude,\r\n            },\r\n        });\r\n    };\r\n\r\n    const onError = (error) => {\r\n        // setLocation({\r\n        //     loaded: true,\r\n        //     error: {\r\n        //         code: error.code,\r\n        //         message: error.message,\r\n        //     },\r\n        // });\r\n        alert(\"Geolocation not found\")\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!(\"geolocation\" in navigator)) {\r\n            onError({\r\n                code: 0,\r\n                message: \"Geolocation not supported\",\r\n            });\r\n        }\r\n\r\n        navigator.geolocation.getCurrentPosition(onSuccess, onError);\r\n    }, []);\r\n\r\n    return location;\r\n};\r\n\r\nexport default useGeoLocation;"]},"metadata":{},"sourceType":"module"}