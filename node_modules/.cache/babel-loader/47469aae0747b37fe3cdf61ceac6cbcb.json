{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Desktop\\\\weather-forecast\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport SearchBar from './components/search/SearchBar';\nimport Weather from './components/main/Weather';\nimport { BsFillArrowLeftCircleFill as Left } from \"react-icons/bs\";\nimport { BsFillArrowRightCircleFill as Right } from \"react-icons/bs\";\nimport useGeoLocation from './hooks/useGeolocation';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  background: #304352;  \n  background: -webkit-linear-gradient(to right, #d7d2cc, #304352);  \n  background: linear-gradient(to right, #d7d2cc, #304352);\n  width: 800px;\n  height: 475px; \n  display: flex;\n  margin: auto;\n  border-radius: 30px;\n\n  #search-bar{\n    margin-left: 255px;\n  }\n  \n`;\n_c = Container;\nconst Wrapper = styled.div`\n  display:flex ;\n  flex-direction:row ;\n  \n  #center{\n    margin-left: 18px;\n    margin-top: 75px;\n    width: 725px;\n    height: 330px;\n    background: rgba( 203, 200, 200, 0.15 );\n    box-shadow: 0 8px 32px 0 rgba( 31, 38, 135, 0.37 );\n    backdrop-filter: blur( 0px );\n    -webkit-backdrop-filter: blur( 0px );\n    border-radius: 10px;\n    border: 1px solid rgba( 255, 255, 255, 0.18 );\n  }\n\n  #left{\n    margin-top: 220px;\n  }\n  #right{\n    margin-top: 220px;\n    margin-left: 20px;\n  }\n`;\n_c2 = Wrapper;\n\nconst App = () => {\n  _s();\n\n  const location = useGeoLocation();\n  useEffect(() => {\n    if (location.loaded) {\n      console.log(location.coordinates.lat + \" \" + location.coordinates.lng);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"search-bar\",\n        children: /*#__PURE__*/_jsxDEV(SearchBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Wrapper, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"left\",\n          children: /*#__PURE__*/_jsxDEV(Left, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Weather, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 28\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"right\",\n          children: /*#__PURE__*/_jsxDEV(Right, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"/T1rsStU50Ktbf9GK92jOTpbtUQ=\", false, function () {\n  return [useGeoLocation];\n});\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["C:/Users/PC/Desktop/weather-forecast/src/App.jsx"],"names":["React","useEffect","useState","styled","SearchBar","Weather","BsFillArrowLeftCircleFill","Left","BsFillArrowRightCircleFill","Right","useGeoLocation","Container","div","Wrapper","App","location","loaded","console","log","coordinates","lat","lng"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,yBAAyB,IAAIC,IAAtC,QAAkD,gBAAlD;AACA,SAASC,0BAA0B,IAAIC,KAAvC,QAAoD,gBAApD;AACA,OAAOC,cAAP,MAA2B,wBAA3B;;AAEA,MAAMC,SAAS,GAAGR,MAAM,CAACS,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;KAAMD,S;AAeN,MAAME,OAAO,GAAGV,MAAM,CAACS,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAxBA;MAAMC,O;;AA2BN,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAMC,QAAQ,GAAGL,cAAc,EAA/B;AAGAT,EAAAA,SAAS,CAAC,MAAK;AACb,QAAGc,QAAQ,CAACC,MAAZ,EAAmB;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,WAAT,CAAqBC,GAArB,GAA2B,GAA3B,GAAiCL,QAAQ,CAACI,WAAT,CAAqBE,GAAlE;AACD;AACF,GAJQ,CAAT;AAQA,sBACE,QAAC,SAAD;AAAA,2BACE;AAAA,8BACE;AAAK,QAAA,EAAE,EAAC,YAAR;AAAA,+BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,OAAD;AAAA,gCACE;AAAK,UAAA,EAAE,EAAC,MAAR;AAAA,iCAAe,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAf;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,EAAE,EAAC,QAAR;AAAA,iCAAiB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAjB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAK,UAAA,EAAE,EAAC,OAAR;AAAA,iCAAgB,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAhB;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CA1BD;;GAAMP,G;UACaJ,c;;;MADbI,G;AA4BN,eAAeA,GAAf","sourcesContent":["import React,{useEffect,useState} from 'react'\nimport styled from 'styled-components'\nimport SearchBar from './components/search/SearchBar'\nimport Weather from './components/main/Weather'\nimport { BsFillArrowLeftCircleFill as Left } from \"react-icons/bs\"\nimport { BsFillArrowRightCircleFill as Right } from \"react-icons/bs\"\nimport useGeoLocation from './hooks/useGeolocation'\n\nconst Container = styled.div`\n  background: #304352;  \n  background: -webkit-linear-gradient(to right, #d7d2cc, #304352);  \n  background: linear-gradient(to right, #d7d2cc, #304352);\n  width: 800px;\n  height: 475px; \n  display: flex;\n  margin: auto;\n  border-radius: 30px;\n\n  #search-bar{\n    margin-left: 255px;\n  }\n  \n`\nconst Wrapper = styled.div`\n  display:flex ;\n  flex-direction:row ;\n  \n  #center{\n    margin-left: 18px;\n    margin-top: 75px;\n    width: 725px;\n    height: 330px;\n    background: rgba( 203, 200, 200, 0.15 );\n    box-shadow: 0 8px 32px 0 rgba( 31, 38, 135, 0.37 );\n    backdrop-filter: blur( 0px );\n    -webkit-backdrop-filter: blur( 0px );\n    border-radius: 10px;\n    border: 1px solid rgba( 255, 255, 255, 0.18 );\n  }\n\n  #left{\n    margin-top: 220px;\n  }\n  #right{\n    margin-top: 220px;\n    margin-left: 20px;\n  }\n`\n\n\nconst App = () => {\n  const location = useGeoLocation();\n  \n\n  useEffect(() =>{  \n    if(location.loaded){\n      console.log(location.coordinates.lat + \" \" + location.coordinates.lng)\n    }\n  })\n  \n  \n\n  return (   \n    <Container>     \n      <div>\n        <div id='search-bar'>\n          <SearchBar />             \n        </div>     \n        <Wrapper>\n          <div id='left'><Left /></div>\n          <div id='center'><Weather /></div>\n          <div id='right'><Right /></div>\n        </Wrapper>\n      </div>\n    </Container>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}